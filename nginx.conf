worker_processes auto;

events {
  worker_connections 1024;
}

http {
  server {
    listen 80;
    root /www;
    include /etc/nginx/mime.types;

    # PWA manifest files
    types {
      application/manifest+json webmanifest;
    }

    location /api/trpc {
      proxy_pass http://server:3000;
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection 'upgrade';
      proxy_set_header Host $host;
      proxy_cache_bypass $http_upgrade;
    }

    # # Caching for certain file types
    # location ~* \.(jpg|jpeg|png|gif|ico|css|js|woff|woff2|ttf|svg)$ {
    #   expires 1y;
    #   add_header Cache-Control "public";
    # }

    # all assets contain hash in filename, cache forever
    location ^~ /assets/ {
      add_header Cache-Control "public, max-age=31536000, s-maxage=31536000, immutable";
      try_files $uri =404;
    }

    # all workbox scripts are compiled with hash in filename, cache forever
    location ^~ /workbox- {
      add_header Cache-Control "public, max-age=31536000, s-maxage=31536000, immutable";
      try_files $uri =404;
    }

    # assume that everything else is handled by the application router, by injecting the index.html.
    # This allows any sub-location to be visited, the failure page is configured within react router
    location / {
      autoindex off;
      expires off;
      add_header Cache-Control "public, max-age=0, s-maxage=0, must-revalidate" always;
      try_files $uri /index.html =404;
    }
  }
}
